@isTest
public class GenerateQuoteFromProject_Test {

    static testmethod void testSetupMethod1(){
        Test.startTest();
        
        Account acc = New Account();
        acc.Name ='Account3';
        insert acc;  
        
        /*ChikPeaO2B__Item__c cpi = new ChikPeaO2B__Item__c();
        cpi.Name = 'Payment1';
        cpi.ChikPeaO2B__Item_Type__c = 'Post-Paid Usage';
        cpi.ChikPeaO2B__Active__c = true;
        insert cpi;*/
        
          ChikPeaO2B__Item__c Item = new ChikPeaO2B__Item__c();
        Item.Name = 'Upfront Payment';
        Item.ChikPeaO2B__Active__c = true;
        Item.ChikPeaO2B__Item_Type__c = 'One-Off';
        insert Item;
        
        ChikPeaO2B__Price_Book__c prcebk = new ChikPeaO2B__Price_Book__c();
        prcebk.Name = 'Price book3';
        prcebk.ChikPeaO2B__Active__c = true;
        insert prcebk;
        
        ChikPeaO2B__Rate_Plan__c Rp = new ChikPeaO2B__Rate_Plan__c();
        Rp.ChikPeaO2B__Item__c = Item.Id;
        Rp.ChikPeaO2B__Bill_Cycle__c='';
        Rp.ChikPeaO2B__Price_Book__c = prcebk.Id;
        Rp.ChikPeaO2B__Pricing_Type__c = 'Flat';
        Rp.ChikPeaO2B__Usage_Rate__c = 7.00;
        insert Rp;
        
        Chikpea_Project__c cpr = new Chikpea_Project__c();
        cpr.Name = 'Services1';
        cpr.Template_Description__c = 'Project to define billing';
        cpr.Template_Name__c = 'Billing1';
        cpr.Category__c = 'Software development';
        cpr.Billing_Frequency__c = 'Weekly';
        cpr.Account__c = acc.id;
        cpr.Price_Book__c = prcebk.id;
        cpr.Templatize__c = True;
        cpr.Status__c = 'New';
        cpr.Upfront_Payment_Percentage__c = 10;
        cpr.ChikPeaSSB__Est_Start_Date__c = system.today() + 1 ;

        insert cpr;
                
        Project_Phase__c ppr = new Project_Phase__c();
        ppr.Name = 'Requirements';
        ppr.Status__c = 'Open';
        ppr.Project__c = cpr.Id;
        ppr.Is_Blended_Rate__c = false;
        insert ppr;
        
        Resource__c res = new Resource__c();
        res.Phase__c = ppr.Id;
        res.Estimated_Hours__c = 10;
        res.Staff_Rate__c = true;
        Insert res;
        
         
       
        
        List<Chikpea_Project__c> prjlist = new List<Chikpea_Project__c>();
        prjlist.add(cpr);
        system.debug('Project list' +prjlist);
        
        GenerateQuoteFromProject.CheckPrjStatus(cpr.Id);
        GenerateQuoteFromProject.GetQuote(new List<Id>{cpr.Id});
   
        Test.stopTest();
    }
}